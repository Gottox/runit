#! /bin/sh
# postinst script for runit
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

case "$1" in
  configure)
    if test -z "$2"; then
      # not upgrading
      if grep '^SV:' /etc/inittab >/dev/null; then
        cat <<EOT >&2

There already is an SV entry in /etc/inittab.  In order to have this package
add an entry with the name SV to have runit's service supervision started
by sysvinit, you need to remove or rename the current SV entry first.

Installation failed.

EOT
        exit 1
      fi
    fi
    if ! grep '^SV:' /etc/inittab >/dev/null; then
      echo 'Adding SV inittab entry...'
      cp /etc/inittab /etc/inittab'{new}'
      cat >>/etc/inittab'{new}' <<EOT
#-- runit begin
SV:123456:respawn:/usr/sbin/runsvdir-start
#-- runit end
EOT
      mv -f /etc/inittab'{new}' /etc/inittab
      kill -HUP 1
    fi
  ;;
  abort-upgrade|abort-remove|abort-deconfigure)
  ;;
  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
  ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
